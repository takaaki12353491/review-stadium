name: Rust Test

on:
  push:
    paths:
      - ".github/workflows/service-user-ci.yml"
      - "Cargo.toml"
      - "Cargo.lock"
      - "services/user/app/**"

defaults:
  run:
    working-directory: services/user/app

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RUSTC_FORCE_INCREMENTAL: 1
    services:
      postgres:
        image: postgres:12
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/cache_cargo

      - name: build
        run: cargo build

      - name: rustfmt install
        run: rustup component add rustfmt
      - name: fmt
        run: cargo fmt --all -- --check

      - name: clippy install
        run: rustup component add clippy
      - name: clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: create database for test
        run: PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE test"
      - name: test
        run: cargo test --all -- --nocapture
